feed
===
real* matrix.getData();

embedding_forward(
    _ddr_ int* idx,
    _ddr_ float* dict,
    int emb_dim,
    int idx_len,
    _ddr_ float* output)
)

embedding_backward(
    _ddr_ float* grads,
    _ddr_ float* dict,
    _ddr_ int* idx,
    int idx_len,
    int emb_dim,
)

fc(
    bool transA, bool transB, 
    int m, int n, int k,
    float alpha,
    _ddr_ float *A, int lda,
    _ddr_ float *B, int ldb,
    float beta,
    _ddr_ float *C, int ldc,
    act = none/tanh/softmax
)

context_projection_forward(
    _ddr_ float* out,     // N * context_length * dim
    _ddr_ float* input,   // N * dim
    _ddr_ int* sequence,  // i-th sequence: [sequence[i], sequence[i+1])
                          // sequence[sequence_num] == N
    size_t sequence_num,
    size_t context_length, //window_size
    size_t dim,
)

context_projection_backword(
    _ddr_ float* out_grad,     // N * dim
    _ddr_ float* input_grad,   // N * context_length * dim
    _ddr_ int* sequence,
    size_t sequence_num;
    size_t context_length, //window_size
    size_t dim,
)

concat

mixed_layer


*cos_sim

auc evaluator

deepspeech
===


图像
===
