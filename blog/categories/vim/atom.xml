<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Vim | Han]]></title>
  <link href="http://zealoct.github.io/blog/categories/vim/atom.xml" rel="self"/>
  <link href="http://zealoct.github.io/"/>
  <updated>2014-05-21T10:45:22+08:00</updated>
  <id>http://zealoct.github.io/</id>
  <author>
    <name><![CDATA[Zealoct]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Vim Efficiency Notes]]></title>
    <link href="http://zealoct.github.io/blog/2014/02/24/vim-notes/"/>
    <updated>2014-02-24T15:00:00+08:00</updated>
    <id>http://zealoct.github.io/blog/2014/02/24/vim-notes</id>
    <content type="html"><![CDATA[<p>关于Vim的一些容易被忽视、却又能提升使用体验和操作效率的操作细节。同时记录Vim中一些（我见到过的）比较实用的配置，分享的同时也给自己留个备忘吧。
一下子总结不完整，慢慢更新。</p>

<!-- more -->


<h2>基本操作</h2>

<p>基本按照幸福感排序，排在前边的是我觉得用了之后一口气儿上五楼都不累的，稍微靠后一点排的就比较随意了。每一项第一行的<em>斜体字</em>是我认为该组合比较有用的场景。</p>

<p><strong>使用Ctrl+[ 替代Esc</strong>，<em>任何时候</em></br>
Ctrl+[ 功能与Esc键完全相同，用这一快捷键的好处就不用解释了，大家都知道按Esc是件多么令人伤神的事情</p>

<p><strong>X和x</strong>，<em>任何时候</em></br>
X 是退格（Backspace），x 是删除（Delete）</p>

<p><strong>使用Ctrl+e 和 Ctrl+y逐行翻滚页面</strong>，<em>阅读（代码）</em></br>
这两个组合非常有用，作用分别是维持当前坐标位置不变，页面上滚和下滚一行</p>

<p><strong> #和* </strong>，<em>阅读代码</em></br>
#（shift+3）用来向上搜索当前光标所在单词，*（shift+8）用来向下搜索</p>

<p><strong>%</strong>，<em>阅读代码</em></br>
在相对应的两个括号之间跳转，当一段函数体非常长的时候能方便的从反括号跳至函数/循环/if等结构的开始处</p>

<p><strong>+ 和 &ndash;</strong></br>
+ 的功能是跳转到下一行行首，与之相对应，- 是跳转到上一行行首</p>

<p><strong>J</strong></br>
删除行末换行符，在把多行连接成一行时非常有用</p>

<p><strong>zz和zt</strong>，<em>阅读</em></br>
将光标所在行置于屏幕中间/顶部，阅读代码时比较有用</p>

<p><strong>H，M 和 L</strong>, <em>代码、文章编辑</em></br>
H，M和L（注意是大写）用来将光标快速移动到当前屏幕的最顶行/中间行/最底行</p>

<p><strong>使用m 和` （Esc下边那个按键）进行标记和跳转</strong></br>
先按m，然后随意输入一个字母，就能用该字母标记当前行，之后在当前文件任意位置可以按 ` + 之前标记的字母快速跳转到这一行。在被标记的行按m，加同样的字母可以取消标记，如果连续按两次`，则光标会在当前位置，和上一次的跳转位置之间来回切换</br>
此外，这里还可以使用<em>单引号</em>代替反引号，他们俩的功能是一样一样的</p>

<p><strong>A 和 I</strong></br>
A 是在本行行尾插入，I 是在本行行首插入。</p>

<p><strong>Ctrl+a和Ctrl+x</strong>
将当前光标所在位置处的数字加1/减1，比较好玩儿的命令，一般用不到，不过用到的话确实很方便</p>

<h2>配置</h2>

<h4>wildmode, wildmenu</h4>

<p>输入命令<code>:set wildmode=list:longest,full</code>和<code>:set wildmenu</code>，在vim窗口下方会出现一条menu，当需要补全的时候（例如<code>:e</code>命令打开新文件，或者输入<code>:s</code>后希望模糊搜索所有s开头的vim命令），按Tab键时自动补全时行为会变为：</p>

<ol>
<li>出现一个list，为当前目录下所有文件，此时可进行并再次按Tab补全</li>
<li>跳至列表第一个选项，或者（如果第1步中输入了文件开头字母）自动补全当前输入</li>
</ol>


<p>默认行为没有步骤1，直接跳转第一个选项，而且不会显示整体列表，使用起来体验极差。</p>

<!-- 字符串匹配、替换 -->

]]></content>
  </entry>
  
</feed>
