<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android on Zea&#39;s</title>
    <link>http://zealoct.github.io/tags/android/</link>
    <description>Recent content in Android on Zea&#39;s</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 20 May 2014 20:26:25 +0800</lastBuildDate>
    
	<atom:link href="http://zealoct.github.io/tags/android/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>如何写 Ubuntu 的 Framebuffer</title>
      <link>http://zealoct.github.io/post/2014-05-20-ubuntu-fbvnc/</link>
      <pubDate>Tue, 20 May 2014 20:26:25 +0800</pubDate>
      
      <guid>http://zealoct.github.io/post/2014-05-20-ubuntu-fbvnc/</guid>
      <description>最近有个小项目，想在 Android 上跑一个通过直接读写 framebuffer 实现的 vnc 客户端， 所以发现了这个 fbvnc， 是 github 上一个小哥儿捣鼓的，基于现有的一个同名项目开发，专为嵌入式设备使用。这个小的 vnc 客户端的不足当然有很多，比如连基本的窗口都木有，直接占用了你整个 framebuffer，不能调整分辨率，巨慢无比，卡的紧了就直接挂，但是它有一个最大的优点，就是真的非常简单，除了一些基本的 Linux 库之外没有任何第三方的依赖。
以上算是个小广告吧 (=
但是一个很大的问题是，这货在 ubuntu 上不 work……什么原因呢，做个小测试看一看。
Ubuntu 下修改 Framebuffer 其实之前我写过小程序测试直接写 ubuntu 下的 framebuffer 的，当时也是神马效果都木有，当时只是猜测和 x11 或 unity 有关，也没深究，这次为了跑 fbvnc，特意去搜了下，后来在 这里 找到了解决方法：需要置上 FB_ACTIVATE_NOW 和 FB_ACTIVATE_FORCE 属性，具体代码如下：
vinfo.activate |= FB_ACTIVATE_NOW | FB_ACTIVATE_FORCE; ioctl(fbfd, FBIOPUT_VSCREENINFO, &amp;amp;vinfo)  加上这段代码之后，我写的测试程序终于可以看到修改屏幕的效果了！
#include &amp;lt;unistd.h&amp;gt; #include &amp;lt;stdio.h&amp;gt; #include &amp;lt;fcntl.h&amp;gt; #include &amp;lt;linux/fb.h&amp;gt; #include &amp;lt;sys/mman.h&amp;gt; int main() { int fbfd = 0; struct fb_var_screeninfo vinfo; struct fb_fix_screeninfo finfo; long int screensize = 0; char *fbp = 0; int x = 0, y = 0，color = 255; long int location = 0; /* 打开 fb 设备文件 */ fbfd = open(&amp;quot;/dev/fb0&amp;quot;, O_RDWR); ioctl(fbfd, FBIOGET_FSCREENINFO, &amp;amp;finfo); ioctl(fbfd, FBIOGET_VSCREENINFO, &amp;amp;vinfo); /* 把 fb 映射到内存 */ screensize = vinfo.</description>
    </item>
    
  </channel>
</rss>